{
  "openapi": "3.0.1",
  "info": {
    "title": "JWT Auth Pro API",
    "description": "JWT Authentication endpoints",
    "license": {
      "name": "Commercial"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{your-domain}/wp-json",
      "description": "Production environment",
      "variables": {
        "your-domain": {
          "default": "example.com",
          "description": "Your WordPress site domain"
        }
      }
    }
  ],
  "paths": {
    "/jwt-auth/v1/token": {
      "post": {
        "description": "Authenticates a user and returns a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jwt-auth/v1/token/validate": {
      "post": {
        "description": "Validates a JWT token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Token is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jwt-auth/v1/token/refresh": {
      "post": {
        "description": "Refreshes an existing token using a refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403": {
            "description": "Refresh failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/jwt-auth/v1/token/revoke": {
      "post": {
        "description": "Revokes the current JWT token, making it immediately invalid",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Token already revoked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Failed to revoke token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "WordPress username or email",
            "example": "your-username"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "your-password"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "The refresh token obtained from the initial authentication"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT access token"
          },
          "user_id": {
            "type": "integer",
            "description": "WordPress user ID"
          },
          "user_email": {
            "type": "string",
            "description": "User's email address"
          },
          "user_nicename": {
            "type": "string",
            "description": "User's URL-friendly name"
          },
          "user_display_name": {
            "type": "string",
            "description": "User's display name"
          },
          "refresh_token": {
            "type": "string",
            "description": "Token used to obtain new access tokens"
          }
        }
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Response code",
            "example": "jwt_auth_valid_token"
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code",
                "example": 200
              }
            }
          }
        }
      },
      "RevokeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Response code indicating successful revocation",
            "example": "jwt_auth_token_revoked"
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code",
                "example": 200
              },
              "revoked_at": {
                "type": "string",
                "description": "Timestamp when the token was revoked",
                "example": "2025-06-29 22:55:30"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "jwt_auth_invalid_token"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
